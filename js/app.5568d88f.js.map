{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/App.vue?95b2","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?315a","webpack:///./src/main.js","webpack:///./src/assets/images/frog.png","webpack:///./src/assets/images/lilypad2.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_m","_v","on","$event","PlaceFrog","StartTravel","staticRenderFns","component","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.5568d88f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/FroggyKnight/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container-fluid vh-100\"},[_c('div',{staticClass:\"row\",attrs:{\"id\":\"appContainer\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-3\"},[_vm._m(0),_c('div',{staticClass:\"controllingPanel\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12\"},[_vm._v(\" Start Place : \")]),_vm._m(1),_c('div',{staticClass:\"col-lg-12 d-flex justify-content-end mt-3\"},[_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"btnPlaceFrog\"},on:{\"click\":function($event){return _vm.PlaceFrog()}}},[_vm._v(\"Place Frog 🐸\")])])])]),_c('div',{staticClass:\"controllingPanel\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12\"},[_vm._v(\" End Place : \")]),_vm._m(2),_c('div',{staticClass:\"col-lg-12 d-flex justify-content-end mt-3\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"id\":\"btnPlaceFrog\"},on:{\"click\":function($event){return _vm.StartTravel()}}},[_vm._v(\"Start Travel ✈\")])])])])]),_vm._m(3)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"header\"}},[_c('h1',[_vm._v(\"Froggy Knight\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-lg-12\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"txtStartPlace\",\"maxlength\":\"2\",\"value\":\"A1\",\"autocomplete\":\"off\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-lg-12\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"txtEndPlace\",\"maxlength\":\"2\",\"value\":\"B3\",\"autocomplete\":\"off\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-lg-9\"},[_c('div',{staticClass:\"m-5 m-lg-0\",attrs:{\"id\":\"mainContent\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"app\">\r\n        <div class=\"container-fluid vh-100\">\r\n            <div class=\"row\" id=\"appContainer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\">\r\n                        <div id=\"header\">\r\n                            <h1>Froggy Knight</h1>\r\n                        </div>\r\n                        <div class=\"controllingPanel\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    Start Place :\r\n                                </div>\r\n                                <div class=\"col-lg-12\">\r\n                                    <input type=\"text\" id=\"txtStartPlace\" class=\"form-control\" maxlength=\"2\" value=\"A1\" autocomplete=\"off\">\r\n                                </div>\r\n                                <div class=\"col-lg-12 d-flex justify-content-end mt-3\">\r\n                                    <button id=\"btnPlaceFrog\" class=\"btn btn-success\" @click=\"PlaceFrog()\">Place Frog 🐸</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"controllingPanel\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    End Place :\r\n                                </div>\r\n                                <div class=\"col-lg-12\">\r\n                                    <input type=\"text\" id=\"txtEndPlace\" class=\"form-control\" maxlength=\"2\" value=\"B3\" autocomplete=\"off\">\r\n                                </div>\r\n                                <div class=\"col-lg-12 d-flex justify-content-end mt-3\">\r\n                                    <button id=\"btnPlaceFrog\" class=\"btn btn-primary\" @click=\"StartTravel()\">Start Travel ✈</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-9\">\r\n                        <div id=\"mainContent\" class=\"m-5 m-lg-0\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n    import chessBoardPlateImageAsset from './assets/images/lilypad2.png';\r\n    import frogAsset from './assets/images/frog.png';\r\n\r\n    export default {\r\n        name: 'App',\r\n        data()\r\n        {\r\n            return {\r\n                frogXStart : 1,\r\n                frogYStart : 1,\r\n                frogXEnd : 2,\r\n                frogYEnd : 3,\r\n                minimumMovesCount : 100,\r\n                isAlreadyArrive : false,\r\n                allMoves : []\r\n            }\r\n        },\r\n        mounted()\r\n        {\r\n\r\n            this.LoadBoard();\r\n            this.LoadFrogPosition(this.frogXStart, this.frogYStart);\r\n        },\r\n        methods: \r\n        {\r\n            LoadBoard()\r\n            {\r\n                const mainContent = document.querySelector(\"#mainContent\");\r\n                mainContent.innerHTML = \"\";\r\n\r\n                for(let i = 0; i < 9; i++)\r\n                {\r\n                    const chessBoardPlateRowContainer = document.createElement(\"div\");\r\n                    chessBoardPlateRowContainer.className = \"d-flex justify-content-center\";\r\n\r\n                    for(let j = 0; j < 9; j++)\r\n                    {\r\n                        const chessBoardPlate = document.createElement(\"div\");\r\n                        chessBoardPlate.className = \"chessBoardPlates d-flex align-items-center justify-content-center\";\r\n\r\n                        if(j == 0 && i != 8)\r\n                        {\r\n                            chessBoardPlate.innerHTML = 8 - i;\r\n                        }\r\n                        else if(i == 8)\r\n                        {\r\n                            if(j != 0)\r\n                            {\r\n                                chessBoardPlate.innerHTML = String.fromCharCode(j + 64);\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            const chessBoardPlateImage = document.createElement(\"img\");\r\n                            chessBoardPlateImage.id = \"chessBoardPlateImage-\" + j + \"\" + (8 - i);\r\n                            chessBoardPlateImage.src = chessBoardPlateImageAsset;\r\n                            chessBoardPlateImage.className = \"chessBoardPlatesImage\";\r\n\r\n                            chessBoardPlate.appendChild(chessBoardPlateImage);\r\n                            if(j == 1 && 8 - i == 1)\r\n                            {\r\n                                const frog = document.createElement(\"img\");\r\n                                frog.src = frogAsset;\r\n                                frog.id = \"frogImage\";\r\n\r\n                                chessBoardPlate.appendChild(frog);\r\n                            }\r\n                        }\r\n\r\n                        chessBoardPlateRowContainer.appendChild(chessBoardPlate);\r\n                    }\r\n\r\n                    mainContent.appendChild(chessBoardPlateRowContainer);\r\n                }\r\n            },\r\n            LoadFrogPosition(x, y)\r\n            {\r\n                const frog = document.querySelector(\"#frogImage\");\r\n                frog.style.transform = \"translate(\" + (x - 1) * 69 + \"px, \" + (y - 1) * -69 + \"px)\";\r\n                frog.style.animation = \"frogJump 1.5s ease-in-out\";\r\n\r\n                setTimeout(() =>\r\n                {\r\n                    frog.style.animation = \"\";\r\n                }, 1400);\r\n            },\r\n            PlaceFrog()\r\n            {\r\n                const txtStartPlace = document.querySelector(\"#txtStartPlace\");\r\n                if(txtStartPlace.value != \"\" && txtStartPlace.value.length == 2)\r\n                {\r\n                    const frogXStartInput = txtStartPlace.value[0].charCodeAt(0) - 64;\r\n                    const frogYStartInput = parseInt(txtStartPlace.value[1]);\r\n\r\n                    if((frogXStartInput >= 1 && frogXStartInput <= 8) && (frogYStartInput >= 1 && frogYStartInput <= 8))\r\n                    {\r\n                        this.frogXStart = frogXStartInput;\r\n                        this.frogYStart = frogYStartInput;\r\n\r\n                        this.LoadFrogPosition(this.frogXStart, this.frogYStart);\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"Start place invalid ...\");\r\n                        txtStartPlace.focus();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    alert(\"Start place invalid ...\");\r\n                    txtStartPlace.focus();\r\n                }\r\n            },\r\n            StartTravel()\r\n            {\r\n                this.isAlreadyArrive = false;\r\n                this.minimumMovesCount = 100;\r\n                this.allMoves = [];\r\n\r\n                const txtStartPlace = document.querySelector(\"#txtStartPlace\");\r\n                if(txtStartPlace.value != \"\" && txtStartPlace.value.length == 2)\r\n                {\r\n                    const frogXStartInput = txtStartPlace.value[0].charCodeAt(0) - 64;\r\n                    const frogYStartInput = parseInt(txtStartPlace.value[1]);\r\n\r\n                    if((frogXStartInput >= 1 && frogXStartInput <= 8) && (frogYStartInput >= 1 && frogYStartInput <= 8))\r\n                    {\r\n                        const txtEndPlace = document.querySelector(\"#txtEndPlace\");\r\n                        if(txtEndPlace.value != \"\" && txtEndPlace.value.length == 2)\r\n                        {\r\n                            const frogXEndInput = txtEndPlace.value[0].charCodeAt(0) - 64;\r\n                            const frogYEndInput = parseInt(txtEndPlace.value[1]);\r\n\r\n                            if((frogXEndInput >= 1 && frogXEndInput <= 8) && (frogYEndInput >= 1 && frogYEndInput <= 8))\r\n                            {\r\n                                this.frogXStart = frogXStartInput;\r\n                                this.frogYStart = frogYStartInput;\r\n                                this.frogXEnd = frogXEndInput;\r\n                                this.frogYEnd = frogYEndInput;\r\n\r\n                                const chessBoardPlateImages = document.querySelectorAll(\".chessBoardPlatesImage\");\r\n                                chessBoardPlateImages.forEach((item) =>\r\n                                {\r\n                                    item.style.filter = \"brightness(70%)\";\r\n                                });\r\n\r\n                                this.LoadFrogPosition(this.frogXStart, this.frogYStart);\r\n                                this.Travel(this.frogXStart, this.frogYStart, 0);\r\n\r\n                                const movesNeeded = [];\r\n                                const lastMove = this.allMoves[this.allMoves.findIndex(a => a.afterX == this.frogXEnd && a.afterY == this.frogYEnd && a.count == this.minimumMovesCount)];\r\n\r\n                                movesNeeded.unshift(lastMove);\r\n                                \r\n                                let beforeMoveX = lastMove.beforeX;\r\n                                let beforeMoveY = lastMove.beforeY;\r\n                                let moveCount = lastMove.count;\r\n                                while(moveCount > 1)\r\n                                {\r\n                                    moveCount--;\r\n\r\n                                    const beforeMove = this.allMoves[this.allMoves.findIndex(a => a.afterX == beforeMoveX && a.afterY == beforeMoveY && a.count == moveCount)];\r\n                                    beforeMoveX = beforeMove.beforeX;\r\n                                    beforeMoveY = beforeMove.beforeY;\r\n\r\n                                    movesNeeded.unshift(beforeMove);\r\n                                }\r\n\r\n                                movesNeeded.forEach((move, index) =>\r\n                                {\r\n                                    const fromPlate = document.querySelector(\"#chessBoardPlateImage-\" + move.beforeX + \"\" + move.beforeY);\r\n                                    fromPlate.style.filter = \"brightness(100%)\";\r\n\r\n                                    const toPlate = document.querySelector(\"#chessBoardPlateImage-\" + move.afterX + \"\" + move.afterY);\r\n                                    toPlate.style.filter = \"brightness(100%)\";\r\n\r\n                                    setTimeout(() => \r\n                                    {\r\n                                        this.LoadFrogPosition(move.afterX, move.afterY);\r\n                                    }, (index + 1) * 1500);\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                alert(\"End place invalid ...\");\r\n                                txtEndPlace.focus();\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            alert(\"End place invalid ...\");\r\n                            txtEndPlace.focus();\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"Start place invalid ...\");\r\n                        txtStartPlace.focus();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    alert(\"Start place invalid ...\");\r\n                    txtStartPlace.focus();\r\n                }\r\n            },\r\n            CheckArrive(x, y, count)\r\n            {\r\n                if(x == this.frogXEnd && y == this.frogYEnd)\r\n                {\r\n                    if(count < this.minimumMovesCount)\r\n                    {\r\n                        this.minimumMovesCount = count;\r\n                    }\r\n\r\n                    this.isAlreadyArrive = true;\r\n                }\r\n                else\r\n                {\r\n                    this.isAlreadyArrive = false;\r\n                }\r\n            },\r\n            Travel(x, y, count)\r\n            {\r\n                this.CheckArrive(x, y, count);\r\n\r\n                if(count > 6)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                if(this.isAlreadyArrive == true)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                if(this.frogXEnd > x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(this.frogXEnd < x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(this.frogXEnd == x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        if(count < this.minimumMovesCount)\r\n                        {\r\n                            this.minimumMovesCount = count;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n<style>\r\n\r\n    @import 'assets/css/Bootstrap.css';\r\n\r\n    @keyframes waterFlows {\r\n        0%\r\n        {\r\n            background-image: url(\"assets/images/water2-blur.jpg\");\r\n        }\r\n\r\n        50%\r\n        {\r\n            background-image: url(\"assets/images/water1-blur.jpg\");\r\n        }\r\n\r\n        100%\r\n        {\r\n            background-image: url(\"assets/images/water2-blur.jpg\");\r\n        }\r\n    }\r\n\r\n    @keyframes lilyPadMoves {\r\n        0%\r\n        {\r\n            transform: translateY(0px);\r\n        }\r\n\r\n        50%\r\n        {\r\n            transform: translateY(-4px);\r\n        }\r\n\r\n        100%\r\n        {\r\n            transform: translateY(0px);\r\n        }\r\n    }\r\n\r\n    @keyframes frogJump {\r\n        0%\r\n        {\r\n            width: 50%;\r\n        }\r\n\r\n        50%\r\n        {\r\n            width: 90%;\r\n        }\r\n\r\n        100%\r\n        {\r\n            width: 50%;\r\n        }\r\n    }\r\n\r\n    #appContainer\r\n    {\r\n        animation: waterFlows 2s ease-in-out infinite;\r\n        background-repeat: repeat;\r\n        transition: all 1s ease-in-out;\r\n    }\r\n\r\n    #header\r\n    {\r\n        padding-top: 30px;\r\n        padding-left: 30px;\r\n        color: white;\r\n        text-shadow: rgba(0, 0, 0, 0.35) 5px 5px 5px;\r\n    }\r\n\r\n    .controllingPanel\r\n    {\r\n        background-color: rgba(255, 255, 255, 0.9);\r\n        margin: 30px 0 0 30px;\r\n        border-radius: 5px;\r\n        padding: 20px;\r\n    }\r\n\r\n    #mainContent\r\n    {\r\n        border-radius: 10px;\r\n        padding: 30px;\r\n    }\r\n\r\n    .chessBoardPlates\r\n    {\r\n        width: 65px;\r\n        height: 65px;\r\n        margin: 2px;\r\n        user-select: none;\r\n        position: relative;\r\n        color: white;\r\n        font-weight: bold;\r\n        font-size: 18px;\r\n    }\r\n\r\n    #frogImage\r\n    {\r\n        width: 50%;\r\n        position: absolute;\r\n        z-index: 2;\r\n        transition: all 1.5s ease-in-out;\r\n    }\r\n\r\n    .chessBoardPlatesImage\r\n    {\r\n        width: 100%;\r\n        z-index: 1;\r\n        position: absolute;\r\n        animation: lilyPadMoves 4s ease-in-out infinite;\r\n        filter : brightness(100%);\r\n        transition: all 1s ease-in-out;\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=e9e02d66&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","module.exports = __webpack_public_path__ + \"img/frog.332b44fc.png\";","module.exports = __webpack_public_path__ + \"img/lilypad2.2ae761b3.png\";"],"sourceRoot":""}