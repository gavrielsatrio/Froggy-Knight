{"version":3,"file":"js/app.0eabba4a.js","mappings":"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","sources":["webpack://froggy-knight/./src/App.vue","webpack://froggy-knight/src/App.vue","webpack://froggy-knight/./src/App.vue?51dd","webpack://froggy-knight/./src/App.vue?0e40","webpack://froggy-knight/./src/main.js","webpack://froggy-knight/webpack/bootstrap","webpack://froggy-knight/webpack/runtime/chunk loaded","webpack://froggy-knight/webpack/runtime/define property getters","webpack://froggy-knight/webpack/runtime/global","webpack://froggy-knight/webpack/runtime/hasOwnProperty shorthand","webpack://froggy-knight/webpack/runtime/publicPath","webpack://froggy-knight/webpack/runtime/jsonp chunk loading","webpack://froggy-knight/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container-fluid\"},[_c('div',{staticClass:\"row vh-100\",attrs:{\"id\":\"appContainer\"}},[_c('div',{staticClass:\"col-lg-12 h-100\"},[_c('div',{staticClass:\"row h-100 pages\",attrs:{\"id\":\"mainPage\"}},[_c('div',{staticClass:\"col-lg-4\"},[_c('div',{staticClass:\"mainControllingPanel\"},[_c('div',{staticClass:\"row\"},[_c('h2',{attrs:{\"id\":\"mainControllingPanelHeader\"}},[_vm._v(\"Set Your Frog\")]),_c('div',{staticClass:\"col-lg-12 mt-3\"},[_vm._v(\" Start Place : \")]),_vm._m(0),_c('div',{staticClass:\"col-lg-12 mt-3\"},[_vm._v(\" End Place : \")]),_c('div',{staticClass:\"col-lg-12\"},[_c('input',{staticClass:\"form-control text-uppercase\",attrs:{\"type\":\"text\",\"id\":\"txtEndPlace\",\"maxlength\":\"2\",\"value\":\"B3\",\"autocomplete\":\"off\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.StartTravel()}}})]),_c('div',{staticClass:\"col-lg-12 d-flex justify-content-end mt-3\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"id\":\"btnPlaceFrog\"},on:{\"click\":function($event){return _vm.StartTravel()}}},[_vm._v(\"Start Travel ✈\")])])])])]),_vm._m(1)])]),_c('div',{staticClass:\"col-lg-12 h-100\"},[_c('div',{staticClass:\"row h-100 align-items-center pages\",attrs:{\"id\":\"introductionPage\"}},[_c('div',{staticClass:\"col-lg-12\"},[_vm._m(2),_c('div',{staticClass:\"w-100\",attrs:{\"id\":\"introductionDescContainer\"}},[_c('p',{staticClass:\"px-lg-5 px-5\",attrs:{\"id\":\"introductionDesc\"}},[_vm._v(\"There will be a frog that demonstrates how a knight moves from one place to another place. The knight frog will takes the shortest path to the desired destination.\")]),_c('button',{staticClass:\"btn\",attrs:{\"id\":\"btnJumpToMain\"},on:{\"click\":function($event){return _vm.JumpToMainPage()}}},[_vm._v(\"Let's Jump Into It\")])])]),_c('img',{attrs:{\"src\":require(\"./assets/images/frog.svg\"),\"id\":\"introductionLoadingFrogImage\"}})])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-lg-12\"},[_c('input',{staticClass:\"form-control text-uppercase\",attrs:{\"type\":\"text\",\"id\":\"txtStartPlace\",\"maxlength\":\"2\",\"value\":\"A1\",\"autocomplete\":\"off\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-lg-8\"},[_c('div',{attrs:{\"id\":\"mainChessBoard\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-100 d-flex justify-content-center\",attrs:{\"id\":\"introductionTitleContainer\"}},[_c('img',{attrs:{\"id\":\"introductionTitle\",\"src\":require(\"./assets/images/titlewhite.png\")}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"app\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row vh-100\" id=\"appContainer\">\r\n                <div class=\"col-lg-12 h-100\">\r\n                    <div id=\"mainPage\" class=\"row h-100 pages\">\r\n                        <div class=\"col-lg-4\">\r\n                            <div class=\"mainControllingPanel\">\r\n                                <div class=\"row\">\r\n                                    <h2 id=\"mainControllingPanelHeader\">Set Your Frog</h2>\r\n                                    <div class=\"col-lg-12 mt-3\">\r\n                                        Start Place :\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <input type=\"text\" id=\"txtStartPlace\" class=\"form-control text-uppercase\" maxlength=\"2\" value=\"A1\" autocomplete=\"off\">\r\n                                    </div>\r\n                                    <div class=\"col-lg-12 mt-3\">\r\n                                        End Place :\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <input type=\"text\" id=\"txtEndPlace\" class=\"form-control text-uppercase\" maxlength=\"2\" value=\"B3\" autocomplete=\"off\" @keyup.enter=\"StartTravel()\">\r\n                                    </div>\r\n                                    <div class=\"col-lg-12 d-flex justify-content-end mt-3\">\r\n                                        <button id=\"btnPlaceFrog\" class=\"btn btn-primary\" @click=\"StartTravel()\">Start Travel ✈</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-8\">\r\n                            <div id=\"mainChessBoard\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-12 h-100\">\r\n                    <div id=\"introductionPage\" class=\"row h-100 align-items-center pages\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div id=\"introductionTitleContainer\" class=\"w-100 d-flex justify-content-center\">\r\n                                <img id=\"introductionTitle\" src=\"./assets/images/titlewhite.png\">\r\n                            </div>\r\n                            <div id=\"introductionDescContainer\" class=\"w-100\">\r\n                                <p id=\"introductionDesc\" class=\"px-lg-5 px-5\">There will be a frog that demonstrates how a knight moves from one place to another place. The knight frog will takes the shortest path to the desired destination.</p>\r\n                                <button class=\"btn\" id=\"btnJumpToMain\" @click=\"JumpToMainPage()\">Let's Jump Into It</button>\r\n                            </div>\r\n                        </div>\r\n                        <img src=\"./assets/images/frog.svg\" id=\"introductionLoadingFrogImage\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n    import chessBoardPlateImageAsset from './assets/images/lilypad2.svg';\r\n    import frogAsset from './assets/images/frog.svg';\r\n\r\n    export default {\r\n        name: 'App',\r\n        data()\r\n        {\r\n            return {\r\n                frogXStart : 1,\r\n                frogYStart : 1,\r\n                frogXEnd : 2,\r\n                frogYEnd : 3,\r\n                minimumMovesCount : 100,\r\n                isAlreadyArrive : false,\r\n                allMoves : []\r\n            }\r\n        },\r\n        mounted()\r\n        {\r\n            this.ShowIntroductionPage();\r\n            // this.JumpToMainPage();\r\n            // this.LoadBoard();\r\n        },\r\n        methods: \r\n        {\r\n            ShowIntroductionPage()\r\n            {\r\n                setTimeout(() => \r\n                {\r\n                    document.querySelector(\"#introductionTitle\").style.transform = \"translate(0px, 0px)\";\r\n                }, 100);\r\n\r\n                setTimeout(() => \r\n                {\r\n                    document.querySelector(\"#introductionDesc\").style.transform = \"translate(0px, 0px)\";\r\n                }, 800);\r\n\r\n                setTimeout(() => \r\n                {\r\n                    document.querySelector(\"#btnJumpToMain\").style.opacity = \"1\";\r\n                }, 1600);\r\n            },\r\n            JumpToMainPage()\r\n            {\r\n                const frogLoading = document.querySelector(\"#introductionLoadingFrogImage\");\r\n                frogLoading.style.transform = \"translate(-50%, 0%)\";\r\n                frogLoading.style.animation = \"frogLoadingJump 1.5s ease-in-out\";\r\n\r\n                setTimeout(() =>\r\n                {\r\n                    frogLoading.style.animation = \"\";\r\n\r\n                    setTimeout(() => \r\n                    {\r\n                        frogLoading.style.transform = \"translate(-50%, -100vh)\";\r\n                        frogLoading.style.animation = \"frogLoadingJump 1.5s ease-in-out 0s 1\";\r\n\r\n                        setTimeout(() => \r\n                        {\r\n                            frogLoading.style.opacity = \"0\";\r\n                        }, 350);\r\n\r\n                        setTimeout(() => \r\n                        {\r\n                            const introductionPage = document.querySelector(\"#introductionPage\");\r\n                            introductionPage.style.transform = \"translate(0%, 0%)\";\r\n                            introductionPage.style.opacity = \"0\";\r\n\r\n                            const mainPage = document.querySelector(\"#mainPage\");\r\n                            mainPage.style.transform = \"translate(0px, 0%)\";\r\n                            mainPage.style.opacity = \"1\";\r\n\r\n                            setTimeout(() => \r\n                            {\r\n                                this.LoadBoard();\r\n                            }, 1200);\r\n                        }, 600);\r\n                    }, 300);\r\n                }, 1400);\r\n            },\r\n            LoadBoard()\r\n            {\r\n                const mainChessBoard = document.querySelector(\"#mainChessBoard\");\r\n                mainChessBoard.innerHTML = \"\";\r\n\r\n                for(let i = 0; i < 9; i++)\r\n                {\r\n                    const chessBoardPlateRowContainer = document.createElement(\"div\");\r\n                    chessBoardPlateRowContainer.className = \"d-flex justify-content-start\";\r\n\r\n                    for(let j = 0; j < 9; j++)\r\n                    {\r\n                        const chessBoardPlate = document.createElement(\"div\");\r\n                        chessBoardPlate.className = \"chessBoardPlates d-flex align-items-center justify-content-center\";\r\n\r\n                        if(j == 0 && i != 8)\r\n                        {\r\n                            chessBoardPlate.innerHTML = 8 - i;\r\n                        }\r\n                        else if(i == 8)\r\n                        {\r\n                            if(j != 0)\r\n                            {\r\n                                chessBoardPlate.innerHTML = String.fromCharCode(j + 64);\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            const chessBoardPlateImage = document.createElement(\"img\");\r\n                            chessBoardPlateImage.id = \"chessBoardPlateImage-\" + j + \"\" + (8 - i);\r\n                            chessBoardPlateImage.src = chessBoardPlateImageAsset;\r\n                            chessBoardPlateImage.className = \"chessBoardPlatesImage\";\r\n\r\n                            chessBoardPlate.appendChild(chessBoardPlateImage);\r\n                            if(j == 1 && 8 - i == 1)\r\n                            {\r\n                                const frog = document.createElement(\"img\");\r\n                                frog.src = frogAsset;\r\n                                frog.id = \"frogImage\";\r\n\r\n                                chessBoardPlate.style.zIndex = \"2\";\r\n                                chessBoardPlate.appendChild(frog);\r\n                            }\r\n                        }\r\n                        \r\n                        setTimeout(() => \r\n                        {\r\n                            chessBoardPlateRowContainer.appendChild(chessBoardPlate);\r\n                            setTimeout(() => \r\n                            {\r\n                                chessBoardPlate.style.transform = \"scale(100%)\";\r\n                            }, 100);\r\n                        }, 150 * (j + 1) + (50 * i));\r\n                    }\r\n\r\n                    mainChessBoard.appendChild(chessBoardPlateRowContainer);\r\n                }\r\n            },\r\n            LoadFrogPosition(x, y)\r\n            {\r\n                const frog = document.querySelector(\"#frogImage\");\r\n                frog.style.transform = \"translate(\" + (x - 1) * 69 + \"px, \" + (y - 1) * -69 + \"px)\";\r\n                frog.style.animation = \"frogJump 1.5s ease-in-out\";\r\n\r\n                setTimeout(() =>\r\n                {\r\n                    frog.style.animation = \"\";\r\n                }, 1400);\r\n            },\r\n            StartTravel()\r\n            {\r\n                this.isAlreadyArrive = false;\r\n                this.minimumMovesCount = 100;\r\n                this.allMoves = [];\r\n\r\n                const txtStartPlace = document.querySelector(\"#txtStartPlace\");\r\n                if(txtStartPlace.value != \"\" && txtStartPlace.value.length == 2)\r\n                {\r\n                    let frogXStartInput = txtStartPlace.value[0].charCodeAt(0) - 64;\r\n                    if(txtStartPlace.value[0].charCodeAt(0) >= 97)\r\n                    {\r\n                        frogXStartInput -= 32;\r\n                    }\r\n\r\n                    const frogYStartInput = parseInt(txtStartPlace.value[1]);\r\n\r\n                    if((frogXStartInput >= 1 && frogXStartInput <= 8) && (frogYStartInput >= 1 && frogYStartInput <= 8))\r\n                    {\r\n                        const txtEndPlace = document.querySelector(\"#txtEndPlace\");\r\n                        if(txtEndPlace.value != \"\" && txtEndPlace.value.length == 2)\r\n                        {\r\n                            let frogXEndInput = txtEndPlace.value[0].charCodeAt(0) - 64;\r\n                            if(txtEndPlace.value[0].charCodeAt(0) >= 97)\r\n                            {\r\n                                frogXEndInput -= 32;\r\n                            }\r\n                            const frogYEndInput = parseInt(txtEndPlace.value[1]);\r\n\r\n                            if((frogXEndInput >= 1 && frogXEndInput <= 8) && (frogYEndInput >= 1 && frogYEndInput <= 8))\r\n                            {\r\n                                this.frogXStart = frogXStartInput;\r\n                                this.frogYStart = frogYStartInput;\r\n                                this.frogXEnd = frogXEndInput;\r\n                                this.frogYEnd = frogYEndInput;\r\n\r\n                                const chessBoardPlateImages = document.querySelectorAll(\".chessBoardPlatesImage\");\r\n                                chessBoardPlateImages.forEach((item) =>\r\n                                {\r\n                                    item.style.filter = \"brightness(70%)\";\r\n                                });\r\n\r\n                                this.LoadFrogPosition(this.frogXStart, this.frogYStart);\r\n                                this.Travel(this.frogXStart, this.frogYStart, 0);\r\n\r\n                                if(this.allMoves.length == 0)\r\n                                {\r\n                                    document.querySelector(\"#chessBoardPlateImage-\" + this.frogXStart + \"\" + this.frogYStart).style.filter = \"brightness(100%)\";\r\n                                    return;\r\n                                }\r\n\r\n                                const movesNeeded = [];\r\n                                const lastMove = this.allMoves[this.allMoves.findIndex(a => a.afterX == this.frogXEnd && a.afterY == this.frogYEnd && a.count == this.minimumMovesCount)];\r\n\r\n                                movesNeeded.unshift(lastMove);\r\n                                \r\n                                let beforeMoveX = lastMove.beforeX;\r\n                                let beforeMoveY = lastMove.beforeY;\r\n                                let moveCount = lastMove.count;\r\n                                while(moveCount > 1)\r\n                                {\r\n                                    moveCount--;\r\n\r\n                                    const beforeMove = this.allMoves[this.allMoves.findIndex(a => a.afterX == beforeMoveX && a.afterY == beforeMoveY && a.count == moveCount)];\r\n                                    beforeMoveX = beforeMove.beforeX;\r\n                                    beforeMoveY = beforeMove.beforeY;\r\n\r\n                                    movesNeeded.unshift(beforeMove);\r\n                                }\r\n\r\n                                movesNeeded.forEach((move, index) =>\r\n                                {\r\n                                    const fromPlate = document.querySelector(\"#chessBoardPlateImage-\" + move.beforeX + \"\" + move.beforeY);\r\n                                    fromPlate.style.filter = \"brightness(100%)\";\r\n\r\n                                    const toPlate = document.querySelector(\"#chessBoardPlateImage-\" + move.afterX + \"\" + move.afterY);\r\n                                    toPlate.style.filter = \"brightness(100%)\";\r\n\r\n                                    setTimeout(() => \r\n                                    {\r\n                                        this.LoadFrogPosition(move.afterX, move.afterY);\r\n                                    }, (index + 1) * 1500);\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                alert(\"End place invalid ...\");\r\n                                txtEndPlace.focus();\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            alert(\"End place invalid ...\");\r\n                            txtEndPlace.focus();\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        alert(\"Start place invalid ...\");\r\n                        txtStartPlace.focus();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    alert(\"Start place invalid ...\");\r\n                    txtStartPlace.focus();\r\n                }\r\n            },\r\n            CheckArrive(x, y, count)\r\n            {\r\n                if(x == this.frogXEnd && y == this.frogYEnd)\r\n                {\r\n                    if(count < this.minimumMovesCount)\r\n                    {\r\n                        this.minimumMovesCount = count;\r\n                    }\r\n\r\n                    this.isAlreadyArrive = true;\r\n                }\r\n                else\r\n                {\r\n                    this.isAlreadyArrive = false;\r\n                }\r\n            },\r\n            Travel(x, y, count)\r\n            {\r\n                this.CheckArrive(x, y, count);\r\n\r\n                if(count > 6)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                if(this.isAlreadyArrive == true)\r\n                {\r\n                    return;\r\n                }\r\n\r\n                if(this.frogXEnd > x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(this.frogXEnd < x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(this.frogXEnd == x)\r\n                {\r\n                    if(this.frogYEnd > y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\r\n                            // Move Left Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x - 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"leftup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Up\r\n                        if(y + 2 <= 8)\r\n                        {\r\n                            // Move Up Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y + 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y + 2,\r\n                                    moveName : \"upright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\t\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd < y)\r\n                    {\r\n                        // Move Left\r\n                        if(x - 2 >= 1)\r\n                        {\t\r\n                            // Move Left Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"leftdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Left\r\n                            if(x - 1 >= 1)\r\n                            {\r\n                                this.Travel(x - 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x - 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downleft\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Down\r\n                        if(y - 2 >= 1)\r\n                        {\r\n                            // Move Down Right\r\n                            if(x + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 1, y - 2, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 1,\r\n                                    afterY : y - 2,\r\n                                    moveName : \"downright\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Down\r\n                            if(y - 1 >= 1)\r\n                            {\r\n                                this.Travel(x + 2, y - 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y - 1,\r\n                                    moveName : \"rightdown\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n    \r\n                        // Move Right\r\n                        if(x + 2 <= 8)\r\n                        {\r\n                            // Move Right Up\r\n                            if(y + 1 <= 8)\r\n                            {\r\n                                this.Travel(x + 2, y + 1, count + 1);\r\n                                this.allMoves.push({\r\n                                    beforeX : x,\r\n                                    beforeY : y,\r\n                                    afterX : x + 2,\r\n                                    afterY : y + 1,\r\n                                    moveName : \"rightup\",\r\n                                    count : count + 1\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    else if(this.frogYEnd == y)\r\n                    {\r\n                        if(count < this.minimumMovesCount)\r\n                        {\r\n                            this.minimumMovesCount = count;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n<style>\r\n\r\n    @import 'assets/css/Bootstrap.css';\r\n\r\n    /*           */\r\n    /* Animation */\r\n    /*           */\r\n\r\n    @keyframes waterFlows {\r\n        0%\r\n        {\r\n            background-image: url(\"assets/images/water2-blur.jpg\");\r\n        }\r\n\r\n        50%\r\n        {\r\n            background-image: url(\"assets/images/water1-blur.jpg\");\r\n        }\r\n\r\n        100%\r\n        {\r\n            background-image: url(\"assets/images/water2-blur.jpg\");\r\n        }\r\n    }\r\n\r\n    @keyframes lilyPadMoves {\r\n        0%\r\n        {\r\n            transform: translateY(0px) scale(100%);\r\n        }\r\n\r\n        50%\r\n        {\r\n            transform: translateY(-4px) scale(105%);\r\n        }\r\n\r\n        100%\r\n        {\r\n            transform: translateY(0px) scale(100%);\r\n        }\r\n    }\r\n\r\n    @keyframes frogJump {\r\n        0%\r\n        {\r\n            width: 30px;\r\n        }\r\n\r\n        50%\r\n        {\r\n            width: 50px;\r\n        }\r\n\r\n        100%\r\n        {\r\n            width: 30px;\r\n        }\r\n    }\r\n\r\n    @keyframes frogLoadingJump {\r\n        0%\r\n        {\r\n            width: 80px;\r\n            height: 80px;\r\n        }\r\n\r\n        50%\r\n        {\r\n            width: 120px;\r\n            height: 120px;\r\n        }\r\n\r\n        100%\r\n        {\r\n            width: 80px;\r\n            height: 80px;\r\n        }\r\n    }\r\n\r\n    /*       */\r\n    /* Fonts */\r\n    /*       */\r\n\r\n    @font-face {\r\n        font-family: linotte-light;\r\n        src: url(\"./assets/fonts/linotte_light.otf\");\r\n    }\r\n\r\n    @font-face {\r\n        font-family: linotte-regular;\r\n        src: url(\"./assets/fonts/linotte_regular.otf\");\r\n    }\r\n\r\n    @font-face {\r\n        font-family: linotte-bold;\r\n        src: url(\"./assets/fonts/linotte_bold.otf\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*                  */\r\n    /* Parent Container */\r\n    /*                  */\r\n\r\n    #appContainer\r\n    {\r\n        animation: waterFlows 2s ease-in-out infinite;\r\n        background-repeat: repeat;\r\n        transition: all 1s ease-in-out;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .pages\r\n    {\r\n        transition: 1.5s all ease-in-out;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*           */\r\n    /* Main Page */\r\n    /*           */\r\n\r\n    #mainPage\r\n    {\r\n        transform: translate(0, -100%);\r\n        opacity: 0;\r\n        overflow: hidden;\r\n        font-family: linotte-light;\r\n    }\r\n\r\n    #mainControllingPanelHeader\r\n    {\r\n        font-family: linotte-bold;\r\n    }\r\n\r\n    #mainChessBoard\r\n    {\r\n        margin-top: 30px;\r\n        margin-left: 30px;\r\n    }\r\n\r\n    .mainControllingPanel\r\n    {\r\n        background-color: rgba(255, 255, 255, 0.9);\r\n        margin: 30px 0 0 30px;\r\n        border-radius: 5px;\r\n        padding: 20px;\r\n        box-shadow: -5px 5px 5px rgba(20, 20, 20, 0.15);\r\n    }\r\n\r\n    .chessBoardPlates\r\n    {\r\n        width: 65px;\r\n        height: 65px;\r\n        margin: 2px;\r\n        user-select: none;\r\n        position: relative;\r\n        z-index: 1;\r\n        color: white;\r\n        font-family: linotte-bold;\r\n        font-size: 18px;\r\n        text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.35);\r\n        transition: all 0.5s ease-in-out;\r\n        transform: scale(0%);\r\n    }\r\n\r\n    #frogImage\r\n    {\r\n        width: 30px;\r\n        position: absolute;\r\n        z-index: 3;\r\n        transition: all 1.5s ease-in-out;\r\n    }\r\n\r\n    .chessBoardPlatesImage\r\n    {\r\n        width: 65px;\r\n        position: absolute;\r\n        z-index: 2;\r\n        animation: lilyPadMoves 4s ease-in-out infinite;\r\n        filter : brightness(100%);\r\n        transition: all 1s ease-in-out;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*                   */\r\n    /* Introduction Page */\r\n    /*                   */\r\n\r\n    #introductionPage\r\n    {\r\n        transform: translate(0%, -100%);\r\n        /* background-image: linear-gradient(to bottom, #449da5, #146571); */\r\n        background-image: url(\"./assets/images/background-water.svg\");\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        opacity: 1;\r\n    }\r\n\r\n    #introductionTitleContainer\r\n    {\r\n        overflow: hidden;\r\n    }\r\n\r\n    #introductionTitle\r\n    {\r\n        width: 75%;\r\n        transition: all 1.25s ease-in-out;\r\n        transform: translate(0, 100%);\r\n        user-select: none;\r\n    }\r\n\r\n    #introductionDescContainer\r\n    {\r\n        margin-top: 24px;\r\n        overflow: hidden;\r\n        text-align: center;\r\n    }\r\n\r\n    #introductionDesc\r\n    {\r\n        color: rgb(245, 245, 245);\r\n        font-family: linotte-light;\r\n        font-size: 24px;\r\n        transform: translate(0, -100%);\r\n        transition: all 1.25s ease-in-out;\r\n    }\r\n\r\n    #introductionLoadingFrogImage\r\n    {\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: 80px;\r\n        height: 80px;\r\n        bottom: 50px;\r\n        left: 50%;\r\n        transform: translate(-50%, 160px);\r\n        transition: all 1s ease-in-out;\r\n        /* filter: brightness(110%); */\r\n        opacity: 1;\r\n    }\r\n\r\n    #btnJumpToMain\r\n    {\r\n        margin-top: 16px;\r\n        background-color: #04a74d;\r\n        border: 1px solid rgb(20, 108, 67);\r\n        color: white;\r\n        font-size: 18px;\r\n        transition: all 0.15s ease-in-out;\r\n        opacity: 0;\r\n        font-family: linotte-regular;\r\n    }\r\n\r\n    #btnJumpToMain:hover\r\n    {\r\n        background-color: #00602B;\r\n    }\r\n\r\n    #btnJumpToMain:focus\r\n    {\r\n        outline: none;\r\n        box-shadow: none;\r\n        background-color: #00602B;\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=61d1764f&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=61d1764f&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/Froggy-Knight/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfroggy_knight\"] = self[\"webpackChunkfroggy_knight\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(246); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","staticClass","_v","_m","on","$event","type","indexOf","_k","keyCode","key","StartTravel","JumpToMainPage","require","staticRenderFns","name","data","frogXStart","frogYStart","frogXEnd","frogYEnd","minimumMovesCount","isAlreadyArrive","allMoves","mounted","ShowIntroductionPage","methods","setTimeout","document","querySelector","style","transform","opacity","frogLoading","animation","introductionPage","mainPage","LoadBoard","mainChessBoard","innerHTML","i","chessBoardPlateRowContainer","createElement","className","j","chessBoardPlate","String","fromCharCode","chessBoardPlateImage","id","src","chessBoardPlateImageAsset","appendChild","frog","frogAsset","zIndex","LoadFrogPosition","x","y","txtStartPlace","value","length","frogXStartInput","charCodeAt","frogYStartInput","parseInt","txtEndPlace","frogXEndInput","frogYEndInput","chessBoardPlateImages","querySelectorAll","forEach","item","filter","Travel","movesNeeded","lastMove","findIndex","a","afterX","afterY","count","unshift","beforeMoveX","beforeX","beforeMoveY","beforeY","moveCount","beforeMove","move","index","fromPlate","toPlate","alert","focus","CheckArrive","push","moveName","component","Vue","config","productionTip","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}